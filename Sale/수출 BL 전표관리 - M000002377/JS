$("#header-addrow").hide();
$("#header-delrow").hide();
$("#detail-addrow").hide();
$("#detail-delrow").hide();

const today = moment();
const lastDay = today.endOf("month").format("YYYY-MM-DD");
$(`#${itmobj1["fromdt"]}`).val(moment().format("YYYY-MM-01"));
$(`#${itmobj1["todt"]}`).val(lastDay);
$("#search_btn").trigger("click");

$("#save_btn").hide();
$("#del_btn").hide();

// grid1.on("dblclick", function(event){
    
//     if(grid1.getCheckedRows().length == 1){
//         $("#cust_btn1").trigger("click");    
//     }
    
// });

// grid1.on("check uncheck", function(event){
//     let rows = grid1.getCheckedRows();
//     $("#cust_btn1").hide();
//     rows.length <= 1 ? $("#cust_btn1").show() : null;
// });

// $("#cust_btn1").on("click", function(event){
//     let rows = grid1.getCheckedRows();
//     if(rows.length == 1){
//         $("#DUMMY1").val("in");
//         $("#DUMMY2").val("in0001");
//         $("#DUMMY3").val(rows[0][itmobj1["bl_export_cd"]]);
//     }else{
//         JSRETURN = false;
//         return false;
//     }
    
// });

//handle jump from request
// let in_requestGrid1_invoice = localStorage.getItem("in_requestGrid1_invoice");
// let in_requestGrid11_invoice = localStorage.getItem("in_requestGrid11_invoice");
// if (in_requestGrid1_invoice && in_requestGrid11_invoice) {
//   $("#cust_btn1").trigger("click");
// }

$(".detail-exceldown").unbind("click");
$(".detail-exceldown").click(function() {
     var e = [],
        t = grid1.getColumns(),
        i = [];
    //for (T in t) t[T].hidden && i.push(t[T].name);
    for (T in t) i.push(t[T].name);
    var a = $("#MTETC5").val();
    if (null != a && "" != a && null != a && "undefined" != a) {
        var n = JSON.parse(decodeURIComponent(a));
        if (0 < n.length)
            for (var l = 0 in n)
                if (null != n[l].name && -1 < n[l].name.indexOf("MERGE")) {
                    var s = {};
                    s.name = n[l].name, s.childNames = n[l].childNames;
                    var d, r, o = !0;
                    for (d in n[l].childNames) {
                        var c = n[l].childNames[d]; - 1 < i.indexOf(c) && (o = !1)
                    }
                    o && (null != n[l].lang && "" != n[l].lang && (r = JSON.parse(decodeURIComponent(n[l].lang)), s.title = r[$("#lang").val()]), e.push(s))
                }
    }
    var m = $("#JSONHEADER").val();
    "Y" == $("#LOADYN").val() && $.isLoading({
        tpl: "<span class=\"isloading-wrapper %wrapper%\"><div class=\"loadingio-spinner-ellipsis-bus78131cg\"><div class=\"ldio-8a4hfl22cb6\"><div></div><div></div><div></div><div></div><div></div></div></div></span>"
    });
    var u = [];
    null != m && "" != m ? u = JSON.parse(m) : "Y" == $("#LOADYN").val() && setTimeout(function() {
        $.isLoading("hide")
    }, 500);
    var p = [],
        g = [];
    //for (f in t) 0 == t[f].hidden ? p.push(t[f]) : g.push(t[f].name);
    for (f in t) p.push(t[f]);
    if (0 < e.length) {
        var h = [],
            v = {},
            E = {};
        if (0 < g.length)
            for (var f = 0 in e) {
                var b = [];
                for (T in e[f].childNames) - 1 < g.indexOf(e[f].childNames[T]) || b.push(e[f].childNames[T]);
                e[f].childNames = b
            }
        for (f in e) {
            for (var T = 0 in h.push(e[f].childNames), e[f].childNames) {
                var L = "NONTITLE";
                0 == T && (L = e[f].title), v[e[f].childNames[T]] = L, E[e[f].childNames[T]] = e[f].childNames.length
            }
        }
    }
    var _ = [],
        N = [],
        D = [],
        O = [];
    for (T in e)
        for (f in _.push(e[T].title), N.push(e[T].childNames.length + ""), D.push(e[T].childNames[0]), h = e[T].childNames) O.push(h[f]);
    var I = {},
        a = $("#menucode").val();
    null != a && "" != a || (a = "download");
    m = I.MENUCODE = a;
    
    //hiden col not use when download excel
    const p_convert = p.filter(item => {
    return item.title != "progress_status_nm" && item.title != "cust_delivery_nm" && item.title != "bl_export_seq" && item.title != "invoice_export_seq" && item.title != "item_cd" && item.title != "item_no" && item.title != "progress_status" 
    && item.title != "use_yn" && item.title != "code_value" && item.title != "d_memo" && item.title != "fromdt" && item.title != "todt" && item.title != "comp_cd" && item.title != "bl_export_cd_search"
    && item.title != "factory_cd" && item.title != "export_type_search" && item.title != "sale_type_search" && item.title != "sale_proc_type_search" && item.title != "cust_ser" && item.title != "manager_search"
    && item.title != "order_cd" && item.title != "USERNAME" && item.title != "export_type" && item.title != "dept_search" && item.title != "DEPTNM" && item.title != "sale_type"
    && item.title != "order_date" && item.title != "delivery_date" && item.title != "delivery_address" && item.title != "wh_cd" && item.title != "wh_nm" && item.title != "cust_cd" && item.title != "cust_manager"
    && item.title != "sale_type_name" && item.title != "d_createuser" && item.title != "sale_proc_type" && item.title != "d_createdate" && item.title != "d_updateuser" && item.title != "d_updatedate" && item.title != "order_no"
    && item.title != "cust_cd" && item.title != "equip_yn" && item.title != "delivery_address" && item.title != "wh_cd" && item.title != "wh_name" && item.title != "dept_cd" && item.title != "manager_id"
    && item.title != "SIMBIZSETTYPE"
    
    && item.title != "진행상태" && item.title != "프로젝 트코드" && item.title != "매출일자(시작)" && item.title != "매출일자(종료)" && item.title != "수출 구분" && item.title != "매출 구분" && item.title != "고객 사" && item.title != "판매구분"  
    
    })
    
    "" != menuNmobj[a] && null != menuNmobj[a] && (m = menuNmobj[a]), I.MENUNAME = encodeURIComponent(m), I.xlsData = encodeURIComponent(JSON.stringify(grid1.getRows())), I.colData = encodeURIComponent(JSON.stringify(p_convert)), I.compData1 = encodeURIComponent(JSON.stringify(_)), I.compData2 = encodeURIComponent(JSON.stringify(N)), I.compData3 = encodeURIComponent(JSON.stringify(D)), I.compData4 = encodeURIComponent(JSON.stringify(O)), $.fileDownload("bigXlsxDownload.do", {
        httpMethod: "POST",
        data: I,
        successCallback: function(e) {
            setTimeout(function() {
                "Y" == $("#LOADYN").val() && $.isLoading("hide")
            }, 10)
        },
        failCallback: function(e, t) {
            setTimeout(function() {
                "Y" == $("#LOADYN").val() && $.isLoading("hide")
            }, 10), msg(langObj.JS0000004, null, "Y")
        }
    })
});

grid1.on("check", function(event) {
        let gd1 = grid1.getRows();
        let rowKeyChecked = [event.rowKey];
            gd1.forEach((element)=>{
                if(!rowKeyChecked.includes(element.rowKey) && element[itmobj1["IN_DT"]] == gd1[event.rowKey][itmobj1["IN_DT"]] && element[itmobj1["IN_SQ"]] 
                == gd1[event.rowKey][itmobj1["IN_SQ"]] && typeof element[itmobj1["IN_SQ"]] != "undefined"){
                    grid1.check(element.rowKey);
                }
                if(element[itmobj1["IN_DT"]] != gd1[event.rowKey][itmobj1["IN_DT"]] || element[itmobj1["IN_SQ"]] != gd1[event.rowKey][itmobj1["IN_SQ"]]){
                    grid1.uncheck(element.rowKey);
                }
            })

})


grid1.on("uncheck", function(event) {
        let gd1 = grid1.getRows();
        let rowKeyChecked = [event.rowKey];
            gd1.forEach((element)=>{
                if(!rowKeyChecked.includes(element.rowKey) && element[itmobj1["IN_DT"]] == gd1[event.rowKey][itmobj1["IN_DT"]] && element[itmobj1["IN_SQ"]] 
                == gd1[event.rowKey][itmobj1["IN_SQ"]] && typeof element[itmobj1["IN_SQ"]] != "undefined"){
                    grid1.uncheck(element.rowKey);
                }
            })
})

$("#cust_btn2").on("click", function () {
    const checkeds = grid1.getCheckedRows();
    let flag = true;
    let message = "";
    if (checkeds.length === 0) {
        flag = false;
        message = "품목을 추가하십시오!";
    }
    for (let i = 0; i < checkeds.length; i++) {
        if (checkeds[i][itmobj1["progress_status"]] != "created") {
            flag = false;
            message = "작성 상태만 전표생성 가능합니다!";
            break;
        }
    }
    if (flag === false) {
        msg(message, null, "N");
        if ($("#msgconfirm").is(":visible")) {
          $("#msgconfirm").dialog("destroy");
        }
        return false;
    } else {
        $(`<div id="confirm_complete"></div>`).appendTo("body")
        .html(`<div class="form-div form-item" style=""><div class="form-title">전표처리일</div><div class="form-content"><input type="text" name="date_input" class="top_data form-input datepicker" value="" style="text-align:left;" readonly></div></div>`)
        .dialog({
          closeOnEscape: false,
          modal: true,
          title: "",
          zIndex: 10000,
          autoOpen: true,
          width: "auto",
          resizable: false,
          position: { my: "top", at: "top+150" },
          open: function(event, ui) {
            $("input").blur();
          },
          buttons: {
            "전표생성": function() {
                handleConfirm();
    
              $(this).dialog("close");
            },
            "취소": function() {
    
              $(this).dialog("close");
            }
          },
          close: function(event, ui) {
            $(this).remove();
          }
        });
        $( ".datepicker" ).datepicker({
          dateFormat: "yy-mm-dd",
          beforeShow: function (date, datepicker) {
               setTimeout(function() {
                    $(".ui-datepicker-year").insertBefore($(".ui-datepicker-month"));
                    $("<span>&nbsp;</span>").insertAfter($(".ui-datepicker-year"));
                }, 50);
            }

        }).datepicker("setDate", new Date());
        
        $(document).keyup(function(e) {

          if (e.keyCode == 27) { 
              $("#confirm_complete").remove();
           }   // esc
        });
    }
});

function handleConfirm() {
    var cols = grid1.getColumns();
    var checkedRows = grid1.getCheckedRows();
        
    var convertRows = [];
    
    for(var i = 0; i < checkedRows.length; i++) {
        var obj = {};
        
        Object.keys(checkedRows[i]).forEach(function(key){
            var value = ConvertSystemSourcetoHtml(checkedRows[i][key]);
            for(var col=0; col<cols.length; col++) {
                var id = cols[col].name;
                if(id == key) {
                    var name = cols[col].targetcode;
                    obj[name] = value;
                    break;
                }
            }
        });
        
        convertRows.push(obj);
    }
    
    var dataPost = {};
    dataPost.type = "handle_confirm";
    dataPost.menucode = "M000002377";
    dataPost.dateInput = $(`input[name="date_input"]`).val();
    dataPost.header = JSON.stringify(convertRows);
    $.ajax({
      type: "POST",
      url: "/ajax.do",
      data: dataPost,
      success: function (response, status, request) {
        if (status === "success") {
            const data = JSON.parse(response.trim());
            if (data.result !== undefined) {
                msg(data.result, null, "N");
                if ($("#msgconfirm").is(":visible")) {
                  $("#msgconfirm").dialog("destroy");
                }
                $("#search_btn").trigger("click");
                return false;
            }
            if (data.error !== undefined) {
                msg(data.error, null, "N");
                if ($("#msgconfirm").is(":visible")) {
                  $("#msgconfirm").dialog("destroy");
                }
                return false;
            }
        }
      },
      error: function (xmlHttpRequest, txtStatus, errorThrown) {},
    });
}




$(window).on("resize", function(){
   var height = $(".right-content").height() - ($(".ui-widget-header").height() + $(".editer-content1").height() + 200);
    grid1.setHeight(height);
});

$(".editer-content2 #grid1 .tui-grid-lside-area .tui-grid-summary-area tr:first td:last").html(`<span style="font-weight:bold">합계</span>`);
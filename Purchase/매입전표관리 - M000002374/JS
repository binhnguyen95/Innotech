const today = moment();
const lastDay = today.subtract("months").endOf("month").format("YYYY-MM-DD");
$(`#${itmobj1["fromdt"]}`).val(moment().format("YYYY-MM-01"));
$(`#${itmobj1["todt"]}`).val(lastDay);

$("#search_btn").trigger("click");
$("#save_btn").hide();
$("#del_btn").hide();
$("#header-addrow").hide();
$("#header-delrow").hide();
$("#detail-addrow").hide();
$("#detail-delrow").hide();

// click cust_btn2
// grid1.on("dblclick", function (ev) {
//   // 그리드 숫자 더블클릭 시 수정창 열리기
//   if (nvl(ev.rowKey + "", "") != "") {
//     grid1.check(ev.rowKey);
//     $("#cust_btn2").trigger("click");
//   }
// });
$("#reset_btn").on("click", function () {
  $("#DUMMY1").val("");
  $("#DUMMY2").val("");
  $("#DUMMY3").val("");
});
$("#cust_btn1").on("click", function () {
  $("#DUMMY1").val("");
  $("#DUMMY2").val("");
  $("#DUMMY3").val("");
});
// $("#cust_btn2").on("click", function () {
//   var gd1 = grid1.getCheckedRows();
//   if (gd1.length == 1) {
//     $("#DUMMY1").val(gd1[0][itmobj1["comp_cd"]]);
//     $("#DUMMY2").val(gd1[0][itmobj1["factory_cd"]]);
//     $("#DUMMY3").val(gd1[0][itmobj1["h_in_cd"]]);
//   }
// });

$(".detail-exceldown").unbind("click");
$(".detail-exceldown").click(function() {
     var e = [],
        t = grid1.getColumns(),
        i = [];
    //for (T in t) t[T].hidden && i.push(t[T].name);
    for (T in t) i.push(t[T].name);
    var a = $("#MTETC5").val();
    if (null != a && "" != a && null != a && "undefined" != a) {
        var n = JSON.parse(decodeURIComponent(a));
        if (0 < n.length)
            for (var l = 0 in n)
                if (null != n[l].name && -1 < n[l].name.indexOf("MERGE")) {
                    var s = {};
                    s.name = n[l].name, s.childNames = n[l].childNames;
                    var d, r, o = !0;
                    for (d in n[l].childNames) {
                        var c = n[l].childNames[d]; - 1 < i.indexOf(c) && (o = !1)
                    }
                    o && (null != n[l].lang && "" != n[l].lang && (r = JSON.parse(decodeURIComponent(n[l].lang)), s.title = r[$("#lang").val()]), e.push(s))
                }
    }
    var m = $("#JSONHEADER").val();
    "Y" == $("#LOADYN").val() && $.isLoading({
        tpl: "<span class=\"isloading-wrapper %wrapper%\"><div class=\"loadingio-spinner-ellipsis-bus78131cg\"><div class=\"ldio-8a4hfl22cb6\"><div></div><div></div><div></div><div></div><div></div></div></div></span>"
    });
    var u = [];
    null != m && "" != m ? u = JSON.parse(m) : "Y" == $("#LOADYN").val() && setTimeout(function() {
        $.isLoading("hide")
    }, 500);
    var p = [],
        g = [];
    //for (f in t) 0 == t[f].hidden ? p.push(t[f]) : g.push(t[f].name);
    for (f in t) p.push(t[f]);
    if (0 < e.length) {
        var h = [],
            v = {},
            E = {};
        if (0 < g.length)
            for (var f = 0 in e) {
                var b = [];
                for (T in e[f].childNames) - 1 < g.indexOf(e[f].childNames[T]) || b.push(e[f].childNames[T]);
                e[f].childNames = b
            }
        for (f in e) {
            for (var T = 0 in h.push(e[f].childNames), e[f].childNames) {
                var L = "NONTITLE";
                0 == T && (L = e[f].title), v[e[f].childNames[T]] = L, E[e[f].childNames[T]] = e[f].childNames.length
            }
        }
    }
    var _ = [],
        N = [],
        D = [],
        O = [];
    for (T in e)
        for (f in _.push(e[T].title), N.push(e[T].childNames.length + ""), D.push(e[T].childNames[0]), h = e[T].childNames) O.push(h[f]);
    var I = {},
        a = $("#menucode").val();
    null != a && "" != a || (a = "download");
    m = I.MENUCODE = a;
    
    //hiden col not use when download excel
    const p_convert = p.filter(item => {
    return item.title != "d_item_cd" && item.title != "request_type_nm" && item.title != "sale_process_type_nm" && item.title != "in_cd" && item.title != "order_cd" && item.title != "h_in_cd_ser" && item.title != "request_cd" && item.title != "request_type" 
    && item.title != "sale_type" && item.title != "wh_cd" && item.title != "dept_cd" && item.title != "code_value" && item.title != "manager_id" && item.title != "in_file" && item.title != "d_memo" && item.title != "use_yn"
    && item.title != "d_comp_cd" && item.title != "USERNAME" && item.title != "d_factory_cd" && item.title != "d_h_in_cd" && item.title != "DEPTNM" && item.title != "DEPTNM" && item.title != "d_h_in_seq" && item.title != "factory_cd"
    && item.title != "d_request_cd" && item.title != "d_request_seq" && item.title != "d_order_cd" && item.title != "d_order_seq" && item.title != "d_in_cd" && item.title != "d_in_seq" && item.title != "d_supplier_cd" && item.title != "d_supplier_cd"
    && item.title != "d_wh_cd" && item.title != "d_progress_status" && item.title != "d_use_yn" && item.title != "d_createdate" && item.title != "d_createuser" && item.title != "d_updatedate" && item.title != "d_updateuser" && item.title != "tot_supply_amt"
    && item.title != "tot_vat" && item.title != "tot_in_amt" && item.title != "comp_cd" && item.title != "SIMBIZSETTYPE"

    
    && item.title != "매입일자(시작)" && item.title != "매입일자(종료)" && item.title != "프로젝 트코드" && item.title != "h_in_cd_ser" && item.title != "요청구분" && item.title != "구매 구분" && item.title != "담당자" && item.title != "부서"
    && item.title != "매입 처"  && item.title != "item_ser"
    && item.name != "ITEM000014504" && item.name != "ITEM000014302" && item.name != "ITEM000014299" && item.name != "ITEM000014300" && item.name != "ITEM000014303" && item.name != "ITEM000014724" && item.name != "ITEM000016173" && item.name != "ITEM000016174"
    && item.name != "ITEM000014304" && item.name != "ITEM000014399" && item.name != "ITEM000017229" && item.name != "ITEM000015495" && item.name != "ITEM000017230"  && item.name != "ITEM000017231" 
        
    })

    
    "" != menuNmobj[a] && null != menuNmobj[a] && (m = menuNmobj[a]), I.MENUNAME = encodeURIComponent(m), I.xlsData = encodeURIComponent(JSON.stringify(grid1.getRows())), I.colData = encodeURIComponent(JSON.stringify(p_convert)), I.compData1 = encodeURIComponent(JSON.stringify(_)), I.compData2 = encodeURIComponent(JSON.stringify(N)), I.compData3 = encodeURIComponent(JSON.stringify(D)), I.compData4 = encodeURIComponent(JSON.stringify(O)), $.fileDownload("bigXlsxDownload.do", {
        httpMethod: "POST",
        data: I,
        successCallback: function(e) {
            setTimeout(function() {
                "Y" == $("#LOADYN").val() && $.isLoading("hide")
            }, 10)
        },
        failCallback: function(e, t) {
            setTimeout(function() {
                "Y" == $("#LOADYN").val() && $.isLoading("hide")
            }, 10), msg(langObj.JS0000004, null, "Y")
        }
    })
});



//get dept_cd current account
$("#DUMMY10").val("");
var data = {};
data.type = "cust_btn10";
data.menucode = "M000000221";
data.UID = $("#UID").val();

$.ajax({
  type: "POST",
  url: "/ajax.do",
  data: data,
  success: function (response, status, request) {
    if (status === "success") {
      $("#DUMMY10").val(response.trim());
    }
  },
  error: function (xmlHttpRequest, txtStatus, errorThrown) {},
});
//end

//handle jump from stock in
// let inGrid1 = localStorage.getItem("inGrid1");
// let inGrid11 = localStorage.getItem("inGrid11");
// if (inGrid1 && inGrid11) {
//   $("#cust_btn1").trigger("click");
// }

grid1.on("check", function(event) {
        const fromdt = $("#" + itmobj1["fromdt"]).val()
        const todt = $("#" + itmobj1["todt"]).val()
        console.log(fromdt, todt)
        let gd1 = grid1.getRows();
        let rowKeyChecked = [event.rowKey];
            gd1.forEach((element)=>{
                if(!rowKeyChecked.includes(element.rowKey) && element[itmobj1["IN_DT"]] == gd1[event.rowKey][itmobj1["IN_DT"]] && element[itmobj1["IN_SQ"]] 
                == gd1[event.rowKey][itmobj1["IN_SQ"]] && typeof element[itmobj1["IN_SQ"]] != "undefined"){
                    grid1.check(element.rowKey);
                }
                if(element[itmobj1["IN_DT"]] != gd1[event.rowKey][itmobj1["IN_DT"]] || element[itmobj1["IN_SQ"]] != gd1[event.rowKey][itmobj1["IN_SQ"]]){
                    grid1.uncheck(element.rowKey);
                }
            })
        $(`#${itmobj1["fromdt"]}`).val(fromdt);
        $(`#${itmobj1["todt"]}`).val(todt);    

})

grid1.on("uncheck", function(event) {
        const fromdt = $("#" + itmobj1["fromdt"]).val()
        const todt = $("#" + itmobj1["todt"]).val()
        let gd1 = grid1.getRows();
        let rowKeyChecked = [event.rowKey];
            gd1.forEach((element)=>{
                if(!rowKeyChecked.includes(element.rowKey) && element[itmobj1["IN_DT"]] == gd1[event.rowKey][itmobj1["IN_DT"]] && element[itmobj1["IN_SQ"]] 
                == gd1[event.rowKey][itmobj1["IN_SQ"]] && typeof element[itmobj1["IN_SQ"]] != "undefined"){
                    grid1.uncheck(element.rowKey);
                }
            })
        $(`#${itmobj1["fromdt"]}`).val(fromdt);
        $(`#${itmobj1["todt"]}`).val(todt);     
})

$("#cust_btn3").on("click", function () {
    
    const checkeds = grid1.getCheckedRows();
    let flag = true;
    let message = "";
    
    if (checkeds.length === 0) {
        flag = false;
        message = "품목을 추가하십시오!";
    }
    
    for (let i = 0; i < checkeds.length; i++) {
        if (checkeds[i][itmobj1["d_progress_status"]] != "new") {
            flag = false;
            message = "작성 상태만 전표생성 가능합니다!";
            break;
        }
    }
    
    if (flag === false) {
        msg(message, null, "N");
        if ($("#msgconfirm").is(":visible")) {
          $("#msgconfirm").dialog("destroy");
        }
        return false;
    } else {
        //call api get Data select
        const dataSelect = {};
        dataSelect.type = "get_ctdeal";
        dataSelect.menucode = "M000002374";
        
        $.ajax({
        type: "POST",
        url: "/ajax.do",
        data: dataSelect,
        success: function(response, status, request) {
            const data = JSON.parse(response.trim())
            console.log(data)
            
            let contentDialog = `<div class="form-div form-item" style="">
                                    <div class="form-title">전표처리일</div>
                                    <div class="form-content">
                                        <input type="text" name="date_input" class="top_data form-input datepicker" value="" style="text-align:left;" readonly>
                                    </div>
                                </div>`;
            contentDialog +=  `<br />`;
            
            contentDialog += `<div class="form-div form-item" style="">
                                <div class="form-title">세무구분</div>
                                <div class="form-content">
                                    <select class="top_data form-select1 popup_select1" name="ct_deal" id="ct_deal" def="">`
                                    for (var i = 0; i < data.length; i++) {
            contentDialog +=            `<option value="`
            contentDialog +=                data[i].code               
            contentDialog +=                `">`
            contentDialog +=                data[i].code_value
            contentDialog +=            `</option>`
                                    }
            contentDialog +=        `</select>
                                    </div>
                                </div>`;
                                
            $(`<div id="confirm_complete"></div>`).appendTo("body")
            .html(contentDialog)
            .dialog({
              closeOnEscape: false,
              modal: true,
              title: "",
              zIndex: 10000,
              autoOpen: true,
              width: "auto",
              resizable: false,
              position: { my: "top", at: "top+150" },
              open: function(event, ui) {
                $("input").blur();
              },
              buttons: {
                "전표생성": function() {
                    handleConfirm();
        
                  $(this).dialog("close");
                },
                "취소": function() {
        
                  $(this).dialog("close");
                }
              },
              close: function(event, ui) {
                $(this).remove();
              }
            });
            $( ".datepicker" ).datepicker({
              dateFormat: "yy-mm-dd",
              beforeShow: function (date, datepicker) {
                   setTimeout(function() {
                        $(".ui-datepicker-year").insertBefore($(".ui-datepicker-month"));
                        $("<span>&nbsp;</span>").insertAfter($(".ui-datepicker-year"));
                    }, 50);
                }
            }).datepicker("setDate", new Date());
        },
        error: function(xmlHttpRequest, txtStatus, errorThrown) {}
        });
        

        
        $(document).keyup(function(e) {

          if (e.keyCode == 27) { 
              $("#confirm_complete").remove();
           }   // esc
        });
    }
});

function handleConfirm() {
    const fromdt = $("#" + itmobj1["fromdt"]).val()
    const todt = $("#" + itmobj1["todt"]).val()
    var cols = grid1.getColumns();
    var checkedRows = grid1.getCheckedRows();
        
    var convertRows = [];
    
    for(var i = 0; i < checkedRows.length; i++) {
        var obj = {};
        
        Object.keys(checkedRows[i]).forEach(function(key){
            var value = ConvertSystemSourcetoHtml(checkedRows[i][key]);
            for(var col=0; col<cols.length; col++) {
                var id = cols[col].name;
                if(id == key) {
                    var name = cols[col].targetcode;
                    obj[name] = value;
                    break;
                }
            }
        });
        
        convertRows.push(obj);
    }
    
    var dataPost = {};
    dataPost.type = "handle_confirm";
    dataPost.menucode = "M000002374";
    dataPost.dateInput = $(`input[name="date_input"]`).val();
    dataPost.ctDeal = $(`#ct_deal`).find(":selected").val();
    dataPost.comp_cd = $("#" + itmobj1["comp_cd"]).val()
    dataPost.factory_cd = $("#" + itmobj1["factory_cd"]).val()
    dataPost.in_date = $("#" + itmobj1["in_date"]).val()
    
    dataPost.header = JSON.stringify(convertRows);
    
    $.ajax({
      type: "POST",
      url: "/ajax.do",
      data: dataPost,
      success: function (response, status, request) {
        if (status === "success") {
            const data = JSON.parse(response.trim());
            $.isLoading("hide")
            
            if (data.result !== undefined) {
                msg(data.result, null, "N");
                if ($("#msgconfirm").is(":visible")) {
                  $("#msgconfirm").dialog("destroy");
                }
                $(`#${itmobj1["fromdt"]}`).val(fromdt);
                $(`#${itmobj1["todt"]}`).val(todt);
                $("#search_btn").trigger("click");
                return false;
            }
            
            if (data.error !== undefined) {
                msg(data.error, null, "N");
                if ($("#msgconfirm").is(":visible")) {
                  $("#msgconfirm").dialog("destroy");
                }
                return false;
            }
        }
      },
      error: function (xmlHttpRequest, txtStatus, errorThrown) {},
    });
}

$("#cust_btn4").on("click", function () {
    const fromdt = $("#" + itmobj1["fromdt"]).val()
    const todt = $("#" + itmobj1["todt"]).val()
    var cols = grid1.getColumns();
    var checkedRows = grid1.getCheckedRows();
    let flag = true;
    let message = "";
    
    if (checkedRows.length === 0) {
        flag = false;
        message = "품목을 추가하십시오!";
    }
    
    for (let i = 0; i < checkedRows.length; i++) {
        if (checkedRows[i][itmobj1["d_progress_status"]] != "interface") {
            flag = false;
            message = "인터페이스 상태만 전표취소 가능합니다!";
            break;
        }
    }


    var convertRows = [];

    for(var i = 0; i < checkedRows.length; i++) {
        var obj = {};
        
        Object.keys(checkedRows[i]).forEach(function(key){
            var value = ConvertSystemSourcetoHtml(checkedRows[i][key]);
            for(var col=0; col<cols.length; col++) {
                var id = cols[col].name;
                if(id == key) {
                    var name = cols[col].targetcode;
                    obj[name] = value;
                    break;
                }
            }
        });
        
        convertRows.push(obj);
    }
    
    if (flag === false) {
        msg(message, null, "N");
        if ($("#msgconfirm").is(":visible")) {
          $("#msgconfirm").dialog("destroy");
        }
        return false;
    } else {
        var dataPost = {};
        dataPost.type = "cust_btn4";
        dataPost.menucode = $("#menucode").val();
        dataPost.comp_cd = $("#" + itmobj1["comp_cd"]).val()
        dataPost.factory_cd = $("#" + itmobj1["factory_cd"]).val()
        dataPost.in_date = $("#" + itmobj1["in_date"]).val()
        dataPost.header = JSON.stringify(convertRows);
        $.ajax({
          type: "POST",
          url: "/ajax.do",
          data: dataPost,
          success: function (response, status, request) {
            if (status === "success") {
                const data = JSON.parse(response.trim());
                if (data.result !== undefined) {
                    msg(data.result, null, "N");
                    if ($("#msgconfirm").is(":visible")) {
                      $("#msgconfirm").dialog("destroy");
                    }
                    $(`#${itmobj1["fromdt"]}`).val(fromdt);
                    $(`#${itmobj1["todt"]}`).val(todt);
                    $("#search_btn").trigger("click");
                    return false;
                }
                if (data.error !== undefined) {
                    msg(data.error, null, "N");
                    if ($("#msgconfirm").is(":visible")) {
                      $("#msgconfirm").dialog("destroy");
                    }
                    return false;
                }
            }
          },
          error: function (xmlHttpRequest, txtStatus, errorThrown) {},
        });
    }
    
});



$(window).on("resize", function(){
   var height = $(".right-content").height() - ($(".ui-widget-header").height() + $(".editer-content1").height() + 200);
    grid1.setHeight(height);
});

$(".editer-content2 #grid1 .tui-grid-lside-area .tui-grid-summary-area tr:first td:last").html(`<span style="font-weight:bold">합계</span>`);